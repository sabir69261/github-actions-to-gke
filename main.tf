# VPC Creation

module "vpc" {
  source                     = "./modules/vpc"
  project                    = var.project
  private_ip_google_access   = var.private_ip_google_access
  region                     = var.region
  routing_mode               = var.routing_mode
  name_vpc_network           = var.name_vpc_network
  auto_create_subnetworks    = var.auto_create_subnetworks
  name_test_subnet           = var.name_test_subnet
  ip_cidr_range_test         = var.ip_cidr_range_test
  gke_pod_test_ip            = var.gke_pod_test_ip
  gke_svc_test_ip            = var.gke_svc_test_ip
  gke_pod_test_name          = var.gke_pod_test_name
  gke_svc_test_name          = var.gke_svc_test_name
}
module "cloudnat" {
    source                             = "./modules/cloudnat"
    region                             = var.region
    router_name                        = var.router_name
    network                            = module.vpc.name_vpc_network
    project                            = var.project
    bgp_asn                            = var.bgp_asn
    ip_count                           = var.ip_count
    nat_name                           = var.nat_name
    nat_ip_allocate_option             = var.nat_ip_allocate_option
    source_subnetwork_ip_ranges_to_nat = var.source_subnetwork_ip_ranges_to_nat
}
module "firewalls" {
  source                   = "./modules/firewalls"
  direction               = var.direction
  network                 = module.vpc.name_vpc_network
  priority                = var.priority
  project                 = var.project
  iap_port                = var.iap_port
  iap_protocol            = var.iap_protocol
  iap_description         = var.iap_description
  iap_name                = var.iap_name
  iap_ranges              = var.iap_ranges
  http_port               = var.http_port
  http_protocol           = var.http_protocol
  http_description        = var.http_description
  http_name               = var.http_name
  http_ranges             = var.http_ranges
  healthcheck_port        = var.healthcheck_port
  healthcheck_protocol    = var.healthcheck_protocol
  healthcheck_description = var.healthcheck_description
  healthcheck_name        = var.healthcheck_name
  healthcheck_ranges      = var.healthcheck_ranges
}

module "gke-public" {
  source                         = "./modules/gke-public"
  name                           = var.name
  location                       = var.location
  project                        = var.project
  node_locations                 = var.node_locations
  initial_node_count             = var.initial_node_count
  channel                        = var.channel
  cluster_secondary_range_name   = var.cluster_secondary_range_name
  services_secondary_range_name  = var.services_secondary_range_name
  network                        = module.vpc.vpc_self_link
  subnetwork                     = module.vpc.subnetwork_self_link
  enable_private_endpoint        = var.enable_private_endpoint
  enable_private_nodes           = var.enable_private_nodes
  enable_shielded_nodes          = var.enable_shielded_nodes
  workload_pool                  = var.workload_pool
  issue_client_certificate       = var.issue_client_certificate
  enable_components              = var.enable_components
  max_node_count                 = var.max_node_count
  min_node_count                 = var.min_node_count
  node_count                     = var.node_count
  disk_size_gb                   = var.disk_size_gb
  disk_type                      = var.disk_type
  image_type                     = var.image_type
  local_ssd_count                = var.local_ssd_count
  machine_type                   = var.machine_type
  max_pods_per_node              = var.max_pods_per_node
  service_account                = var.service_account
  oauth_scopes                   = var.oauth_scopes
  auto_repair                    = var.auto_repair
  auto_upgrade                   = var.auto_upgrade
  max_surge                      = var.max_surge
  max_unavailable                = var.max_unavailable
  enable_integrity_monitoring    = var.enable_integrity_monitoring
  enable_secure_boot             = var.enable_secure_boot
  network_policy                 = var.network_policy
  master_global_access           = var.master_global_access
  nodepool_name                  = var.nodepool_name
  node_version                   = var.node_version
}

