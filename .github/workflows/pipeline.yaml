name: build pipeline

on:
  push:
    branches:
      - main
      
env:
  IMAGE_TAG:  ${{ github.event.head_commit.message }}

jobs:

  build:
    name: Build-Publish-Docker-Image
    runs-on: ubuntu-latest
    steps:
      - name: "checkout repository"
        uses: actions/checkout@v3
      
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY  }}'
          
      - name: "Logging to Artifact registry"
        run: gcloud auth configure-docker asia-south2-docker.pkg.dev

      - name: Build the Docker image
        run: docker build -t asia-south2-docker.pkg.dev/test-dev-apps/test-repo/test:${{ env.IMAGE_TAG }} .
        
      - name: Push the docker images to Registry
        run: docker push asia-south2-docker.pkg.dev/test-dev-apps/test-repo/test:${{ env.IMAGE_TAG }}
        
        
  Infra-provisioning:
    name: Infrastructure Provisioning
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: "checkout repository"
        uses: actions/checkout@v3
         
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform Initialize
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
          
      - name: Terraform Plan
        run: terraform plan
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }} 
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply --auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}    
                 
 
  Deploy:
    name: Deploy to GKE
    needs: Infra-provisioning
    runs-on: ubuntu-latest
    steps:
      - name: "checkout repository"
        uses:  actions/checkout@v3

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}'
      
      - name: Install gke-gcloud-auth-plugin
        run: |
          REPO_URL="https://packages.cloud.google.com/apt"
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] $REPO_URL cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list >/dev/null
          sudo wget -q https://packages.cloud.google.com/apt/doc/apt-key.gpg -O /usr/share/keyrings/cloud.google.gpg
          sudo apt-get update -y
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Get GKE Credentials
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: true
        run: gcloud container clusters get-credentials gke-test-cluster-01 --region asia-south2 --project test-dev-apps 
        
      - name: Set up Kustomize file
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
          
      - name: Deploy latest Image to GKE cluster
        run: |-
          ./kustomize edit set image asia-south2-docker.pkg.dev/test-dev-apps/test-repo/test:IMAGE_TAG=asia-south2-docker.pkg.dev/test-dev-apps/test-repo/test:${{ env.IMAGE_TAG }}
          ./kustomize build . | kubectl apply -f -
